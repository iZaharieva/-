@using Sladkarnitsa_Naslada.Models.Order
@model IEnumerable<Sladkarnitsa_Naslada.Models.Product.ProductIndexVM>

@{
    ViewData["Title"] = "Index";
}
<head>
    <link rel="stylesheet" href="~/css/new.css" />

</head>

<div class="row justify-content-center text-center">
    <div class="col-md-8 col-lg-6">
        <div class="header mb-5">
            <h2>Our products</h2>
        </div>
    </div>
</div>  

@if ((this.User.Identity.IsAuthenticated) && (this.User.IsInRole("Administrator")))
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}

<form asp-controller="Product" asp-action="Index" method="get">
    <p>
        Category: <input type="text" name="SearchStringCategoryName" />
        Maker: <input type="text" name="SearchStringMakerName" />

        <input type="submit" value="Filter" />
    </p>
</form>

<section class="section-products">
    <div class="container">

        <div class="row">

            @foreach (var item in Model)
            {

                <div class="col-md-6 col-lg-4 col-xl-3 mr-5">
                    <div id="product-1" class="single-product">
                        <div class="">
                            <img src="@Html.DisplayFor(modelItem => item.Photo)" alt="Photo" width="280"/>
                        </div>
                        <div class="part-2">
                            <h3 class="product-title">@Html.DisplayFor(modelItem => item.Name)</h3>

                            <h4 class="product-price">@Html.DisplayFor(modelItem => item.Price) lv.</h4>
                            @if (this.User.Identity.IsAuthenticated)
                            {
                                @await Html.PartialAsync("_OrderPartialView", new OrderConfirmVM
                           {
                               ProductId = item.Id
                           })
                            }
                            @if ((this.User.Identity.IsAuthenticated) && (this.User.IsInRole("Administrator")))
                            {
                                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                            } |
                            <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                            @if ((this.User.Identity.IsAuthenticated) && (this.User.IsInRole("Administrator")))
                            {
                                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>}

                        </div>
                    </div>

                </div>
            }
        </div>
    </div>
</section>
@*<tr>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
                @Html.DisplayFor(modelItem => item.CategoryId)
            </td>
        <td>
            @Html.DisplayFor(modelItem => item.CategoryName)
        </td>
        <td>
                @Html.DisplayFor(modelItem => item.MakerId)
            </td>
        <td>
            @Html.DisplayFor(modelItem => item.MakerName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Description)
        </td>
        <td>

            <img src="@Html.DisplayFor(modelItem => item.Photo)" alt="Photo" width="100" />
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Price)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Quantity)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Discount)
        </td>

        <td>
            @if ((this.User.Identity.IsAuthenticated) && (this.User.IsInRole("Administrator")))
            {
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
            } |
            <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
            @if ((this.User.Identity.IsAuthenticated) && (this.User.IsInRole("Administrator")))
            {
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>}
        </td>
    </tr>*@






@section Scripts{
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
